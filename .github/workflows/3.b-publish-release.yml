name: 3.b Publish Release

on:
  release:
    types: [published]
  workflow_dispatch:

env:
  LDIO_IMAGE_NAME: ldes/ldi-orchestrator
  LDI_NIFI_IMAGE_NAME: ldes/ldi-workbench-nifi

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 18
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      - name: Publish Jar to GitHub Packages
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
        run: |
          mvn -B deploy -Prelease
          export VERSION=$(mvn help:evaluate -Dexpression="project.version" -q -DforceStdout)
          echo "version=$VERSION" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          # Temporary workaround for buildx problem
          # See: https://github.com/docker/build-push-action/issues/761#issuecomment-1383822381
          driver-opts: |
            image=moby/buildkit:v0.10.6
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ldio.Dockerfile
          push: true
          tags: ${{ env.LDIO_IMAGE_NAME }}:${{ env.version }}, ${{ env.LDIO_IMAGE_NAME }}:latest
          build-args: |
            platforms: linux/amd64,linux/arm64
      - name: Build and push NiFi Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ldi-nifi.Dockerfile
          push: true
          tags: ${{ env.LDI_NIFI_IMAGE_NAME }}:${{ env.version }}, ${{ env.LDI_NIFI_IMAGE_NAME }}:latest
          build-args: |
            NIFI_DOCKER_IMAGE_VERSION=${{ vars.NIFI_DOCKER_IMAGE_VERSION }}
            platforms: linux/amd64,linux/arm64